{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport TodoHeader from './components/TodoHeader.vue';\nimport TodoMain from './components/TodoMain.vue';\nimport TodoFooter from './components/TodoFooter.vue';\n\n// 渲染功能\n// 1. 提供数据 -> 提供在公共的父组件 App.vue\n// 2. 通过父传子，将数据传递给TodoMain\n// 3. 利用 v-for渲染\n\n// 删除功能：\n// 1. 监听事件（监听删除的点击） 携带id\n// 2. 子传父，将删除的id传递给父组件\n// 3. 进行删除 filter\n\n// 底部合计：\n// 1. 父传子 传list => 渲染\n// 清空： 子传父，父清空\n// 持久化存储：使用watch 深度监视\n\nexport default {\n  data() {\n    return {\n      list: JSON.parse(localStorage.getItem('list')) || [{\n        id: 1,\n        name: '示例:打篮球'\n      }, {\n        id: 2,\n        name: '示例看电影'\n      }]\n    };\n  },\n  methods: {\n    handleAdd(todoName) {\n      this.list.unshift({\n        id: +new Date(),\n        name: todoName\n      });\n    },\n    handelDel(id) {\n      this.list = this.list.filter(item => item.id !== id);\n    },\n    handleClear() {\n      this.list = [];\n    }\n  },\n  watch: {\n    list: {\n      deep: true,\n      handler(newValue) {\n        localStorage.setItem('list', JSON.stringify(newValue));\n      }\n    }\n  },\n  components: {\n    TodoHeader,\n    TodoMain,\n    TodoFooter\n  }\n};","map":{"version":3,"names":["TodoHeader","TodoMain","TodoFooter","data","list","JSON","parse","localStorage","getItem","id","name","methods","handleAdd","todoName","unshift","Date","handelDel","filter","item","handleClear","watch","deep","handler","newValue","setItem","stringify","components"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <!-- 主体区域 -->\r\n  <section id=\"app\">\r\n    <TodoHeader @add=\"handleAdd\"></TodoHeader>\r\n    <TodoMain @del = \"handelDel\" :list = \"list\"></TodoMain>\r\n    <TodoFooter @clear=\"handleClear\" :list=\"list\"></TodoFooter>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport TodoHeader from './components/TodoHeader.vue'\r\nimport TodoMain from './components/TodoMain.vue'\r\nimport TodoFooter from './components/TodoFooter.vue'\r\n\r\n// 渲染功能\r\n// 1. 提供数据 -> 提供在公共的父组件 App.vue\r\n// 2. 通过父传子，将数据传递给TodoMain\r\n// 3. 利用 v-for渲染\r\n\r\n// 删除功能：\r\n// 1. 监听事件（监听删除的点击） 携带id\r\n// 2. 子传父，将删除的id传递给父组件\r\n// 3. 进行删除 filter\r\n\r\n// 底部合计：\r\n// 1. 父传子 传list => 渲染\r\n// 清空： 子传父，父清空\r\n// 持久化存储：使用watch 深度监视\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      list: JSON.parse(localStorage.getItem('list'))||[\r\n        {id:1,name:'示例:打篮球'},\r\n        {id:2,name:'示例看电影'},\r\n      ]\r\n    }\r\n  },\r\n  methods:{\r\n    handleAdd (todoName){\r\n      this.list.unshift({\r\n        id: +new Date(),\r\n        name: todoName\r\n      })\r\n    },\r\n    handelDel(id){\r\n      this.list = this.list.filter(item=>item.id!==id)\r\n    },\r\n    handleClear(){\r\n      this.list=[]\r\n    }\r\n  },\r\n  watch:{\r\n    list: {\r\n      deep:true,\r\n      handler(newValue){\r\n        localStorage.setItem('list',JSON.stringify(newValue))\r\n      }\r\n    }\r\n  },\r\n  components:{\r\n    TodoHeader,\r\n    TodoMain,\r\n    TodoFooter\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"mappings":";AAUA,OAAAA,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,UAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,cACA;QAAAC,EAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,EAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,UAAAC,QAAA;MACA,KAAAT,IAAA,CAAAU,OAAA;QACAL,EAAA,OAAAM,IAAA;QACAL,IAAA,EAAAG;MACA;IACA;IACAG,UAAAP,EAAA;MACA,KAAAL,IAAA,QAAAA,IAAA,CAAAa,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAT,EAAA,KAAAA,EAAA;IACA;IACAU,YAAA;MACA,KAAAf,IAAA;IACA;EACA;EACAgB,KAAA;IACAhB,IAAA;MACAiB,IAAA;MACAC,QAAAC,QAAA;QACAhB,YAAA,CAAAiB,OAAA,SAAAnB,IAAA,CAAAoB,SAAA,CAAAF,QAAA;MACA;IACA;EACA;EACAG,UAAA;IACA1B,UAAA;IACAC,QAAA;IACAC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}